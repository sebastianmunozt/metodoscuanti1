pacman::p_load(vembedr)
x <- (1,2,3,4,5,6)
xaringan:::inf_mr()
5+6
5+6
5 -> a
# 2. ASIGNACIÓN DE VALORES #####
x <- 4
x
5 -> a
a
print("Hola")
2+3
x <- c(1,2,3,4,5,6)
#comando
sum(x)
#comando
y <- sum(x)
?sum
1
x <- 1
x
class(x)
x <- "uno"
class(x)
5 # para ejecutar: "ctr + enter" al final de lÍnea o selección  o botón "run"
5+6
c(1:10) #concatenar
# 2. ASIGNACIÓN DE VALORES #####
x <- 4
x
generof <- factor (genero, labels = c("Hombre", "Mujer", "NS-NR")) #Incorporar valores perdidos
factor <- c("Hombre", "Mujer", "Mujer", "Mujer", "N/S", "N/S", "Hombre", "N/R")
#le doy la característica de factor
sexo <- factor(factor)
#Obtengo una tabla de frecuencias: ¿Cuántos hombres y mujeres tengo?
table(sexo)
genero <- c(1,2,2,2,1,2,1,99,99)
genero_f <- factor(genero, labels = c("Hombre", "Mujer")) #Importancia del error (cantidad valores)
genero_f <- factor(genero, labels = "Hombre")
generof <- factor (genero, labels = c("Hombre", "Mujer", "NS-NR")) #Incorporar valores perdidos
generof <- factor (genero, labels = c("Hombre", "Mujer", NA)) #Cambiar a valor lógico: valor perdido
letras <- c("hombre", "mujer", "no sabe/no responde")
generof2 <- factor (genero, labels = letras)
#Obtengo tabla de frecuencias
table(generof)
table(generof2)
library(gt)
library(tidyverse)
tabla_ejemplo <- table(generof)
tabla_ejemplo
tabla_ejemplo <- as.data.frame (tabla_ejemplo) #Se cambia el formato de tabla a dataframe
tabla_ejemplo %>%
gt () %>%
tab_header("Mi primera tabla uwu") %>%
cols_label (generof  = "Género",
Freq = "Frecuencia") %>%
tab_footnote(
footnote = "Ya aprenderé a programar",
locations = cells_title(groups = "title")
)
ggplot(tabla_ejemplo, aes(x=generof, y=Freq, fill=generof))  +
geom_col () +
theme_linedraw()+
labs (title = "Mi primer gráfico uwu",
x = "Género",
y = "Frecuencia")+
guides (fill= "none") +
theme (plot.title = element_text(hjust = 0.5))
#de esto, al gráfico
tabla_ejemplo
y <- c(4, 3, 5) # Información del vector en entorno. Función concatenar "c ()"
z <- c(1.1, 4.67, 5.1, 6.8)
letras <- c("hombre", "mujer", "no sabe/no responde")
#4. MANIPULACIÓN MATEMÁTICA DE VECTORES #####
2 - 1  #operar los dos cálculos a la vez
10/2
y * 2 #operación directa no guarda resultado (multiplicación de valores de un vector o variable)
5 -> a
# 2. ASIGNACIÓN DE VALORES #####
x <- 4
genero <- c(1,2,2,2,1,2,1,99,99)
genero_f <- factor(genero, labels = c("Hombre", "Mujer")) #Importancia del error (cantidad valores)
genero_f <- factor(genero, labels = "Hombre")
genero_f
generof <- factor (genero, labels = c("Hombre", "Mujer", "NS-NR")) #Incorporar valores perdidos
generof
generof <- factor (genero, labels = c("Hombre", "Mujer", NA)) #Cambiar a valor lógico: valor perdido
letras <- c("hombre", "mujer", "no sabe/no responde")
generof2 <- factor (genero, labels = letras)
#Obtengo tabla de frecuencias
table(generof)
table(generof2)
library(gt)
library(tidyverse)
tabla_ejemplo <- table(generof)
tabla_ejemplo
tabla_ejemplo <- as.data.frame (tabla_ejemplo) #Se cambia el formato de tabla a dataframe
tabla_ejemplo %>%
gt () %>%
tab_header("Mi primera tabla uwu") %>%
cols_label (generof  = "Género",
Freq = "Frecuencia") %>%
tab_footnote(
footnote = "Ya aprenderé a programar",
locations = cells_title(groups = "title")
)
ggplot(tabla_ejemplo, aes(x=generof, y=Freq, fill=generof))  +
geom_col () +
theme_linedraw()+
labs (title = "Mi primer gráfico uwu",
x = "Género",
y = "Frecuencia")+
guides (fill= "none") +
theme (plot.title = element_text(hjust = 0.5))
edad <- c(1:5) #concateno
edad2 <- c(1,2,3,4,5, NA)
edad2
sum(edad)
sum(edad2)
#se saca de la suma los perdidos
sum(edad2, na.rm = TRUE)
# 8. MEDIA
#Acá la funcion na.rm elimina de la suma los na
mean(edad2, na.rm = T)
#9. REMOVER OBJETOS ESPECÍFICOS DEL ENTORNO DE TRABAJO #####
remove(x)
remove (a, y, z)
#Para limpiar entorno de trabajo completo
remove(list = ls()) #para limpiar entorno de trabajo completo
5 # para ejecutar: "ctr + enter" al final de lÍnea o selección  o botón "run"
5+6
c(1:10) #concatenar
# 2. ASIGNACIÓN DE VALORES #####
x <- 4
x
5 -> a
a
y <- c(4, 3, 5) # Información del vector en entorno. Función concatenar "c ()"
z <- c(1.1, 4.67, 5.1, 6.8)
letras <- c("hombre", "mujer", "no sabe/no responde")
class(y)
class(y)
class(z)
class(letras)
#4. MANIPULACIÓN MATEMÁTICA DE VECTORES #####
2 - 1  #operar los dos cálculos a la vez
10/2
y * 2 #operación directa no guarda resultado (multiplicación de valores de un vector o variable)
a+x
a-x
a*x
a/x
a^x
factor <- c("Hombre", "Mujer", "Mujer", "Mujer", "N/S", "N/S", "Hombre", "N/R")
#le doy la característica de factor
sexo <- factor(factor)
sexo
#Obtengo una tabla de frecuencias: ¿Cuántos hombres y mujeres tengo?
table(sexo)
genero <- c(1,2,2,2,1,2,1,99,99)
genero_f <- factor(genero, labels = c("Hombre", "Mujer")) #Importancia del error (cantidad valores)
genero_f <- factor(genero, labels = "Hombre")
genero_f
generof <- factor (genero, labels = c("Hombre", "Mujer", "NS-NR")) #Incorporar valores perdidos
generof
generof <- factor (genero, labels = c("Hombre", "Mujer", NA)) #Cambiar a valor lógico: valor perdido
letras <- c("hombre", "mujer", "no sabe/no responde")
generof2 <- factor (genero, labels = letras)
#Obtengo tabla de frecuencias
table(generof)
table(generof2)
library(gt)
library(tidyverse)
tabla_ejemplo <- table(generof)
tabla_ejemplo
tabla_ejemplo <- as.data.frame (tabla_ejemplo) #Se cambia el formato de tabla a dataframe
#Técnica avanzada el pipe %>%
tabla_ejemplo %>%
gt () %>%
tab_header("Mi primera tabla uwu") %>%
cols_label (generof  = "Género",
Freq = "Frecuencia") %>%
tab_footnote(
footnote = "Ya aprenderé a programar",
locations = cells_title(groups = "title")
)
#mi primer gráfico! #### usamos ggplot
ggplot(tabla_ejemplo, aes(x=generof, y=Freq, fill=generof))  +
geom_col () +
theme_linedraw()+
labs (title = "Mi primer gráfico uwu",
x = "Género",
y = "Frecuencia")+
guides (fill= "none") +
theme (plot.title = element_text(hjust = 0.5))
#de esto, al gráfico
tabla_ejemplo
edad <- c(1:5) #concateno
edad2 <- c(1,2,3,4,5, NA)
sum(edad)
sum(edad2)
#se saca de la suma los perdidos
sum(edad2, na.rm = TRUE)
# 8. MEDIA
#Acá la funcion na.rm elimina de la suma los na
mean(edad2, na.rm = T)
#9. REMOVER OBJETOS ESPECÍFICOS DEL ENTORNO DE TRABAJO #####
remove(x)
remove (a, y, z)
#Para limpiar entorno de trabajo completo
remove(list = ls()) #para limpiar entorno de trabajo completo
